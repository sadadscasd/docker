# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: docker build python
        run: docker build -t python:latest ./python
      - name: docker build node
        run: docker build -t node:latest ./node
      # login
      - name: logging
        # uses: docker/login-action@v3
        # with:
        #   registry: ghcr.io
        #   username: sadadscasd
        #   password: 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
        run: docker login docker.pkg.github.com -u sadadscasd -p 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
      - name: docker push
        run: |
            docker tag python:latest ghcr.io/sadadscasd/docker/pythonsmegma:1 
            docker push ghcr.io/sadadscasd/docker/pythonsmegma:1   
            docker tag node:latest ghcr.io/sadadscasd/docker/nodesmegma:1 
            docker push ghcr.io/sadadscasd/docker/nodesmegma:1   

        # This workflow contains a single job called "build"
  # deploy:
  #     # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #     # job deploy
  #     - name: docker build python
  #       run: docker build -t python:latest ./python
  #     - name: docker build node
  #       run: docker build -t node:latest ./node
  #     - name: docker compose
  #       run: docker compose up -d
        
